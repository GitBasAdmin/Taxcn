import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
//
import { NgxPopperjsDirective } from "./directives/ngx-popperjs/ngx-popperjs.directive";
import { NgxPopperjsLooseDirective } from "./directives/ngx-popperjs/ngx-popperjs-loose.directive";
import { NgxPopperjsContentComponent } from "./components/ngx-popperjs-content/ngx-popperjs-content.component";
import { NGX_POPPERJS_DEFAULTS } from "./models/ngx-popperjs-defaults.model";
import * as i0 from "@angular/core";
export function provideNgxPopperjsOptions(config = {}) {
    return [
        { provide: NGX_POPPERJS_DEFAULTS, useValue: config },
    ];
}
class NgxPopperjsModule {
    static forRoot(popperBaseOptions) {
        return {
            ngModule: NgxPopperjsModule,
            providers: [
                provideNgxPopperjsOptions(popperBaseOptions)
            ]
        };
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: NgxPopperjsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.0.2", ngImport: i0, type: NgxPopperjsModule, declarations: [NgxPopperjsContentComponent,
            NgxPopperjsDirective,
            NgxPopperjsLooseDirective], imports: [CommonModule], exports: [NgxPopperjsContentComponent,
            NgxPopperjsDirective,
            NgxPopperjsLooseDirective] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: NgxPopperjsModule, providers: [
            provideNgxPopperjsOptions()
        ], imports: [CommonModule] });
}
export { NgxPopperjsModule };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: NgxPopperjsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [
                        NgxPopperjsContentComponent,
                        NgxPopperjsDirective,
                        NgxPopperjsLooseDirective
                    ],
                    exports: [
                        NgxPopperjsContentComponent,
                        NgxPopperjsDirective,
                        NgxPopperjsLooseDirective
                    ],
                    providers: [
                        provideNgxPopperjsOptions()
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXBvcHBlcmpzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1wb3BwZXJqcy9zcmMvbGliL25neC1wb3BwZXJqcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFzQixRQUFRLEVBQVcsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLEVBQUU7QUFDRixPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxrREFBa0QsQ0FBQztBQUN0RixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSx3REFBd0QsQ0FBQztBQUNqRyxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSxrRUFBa0UsQ0FBQztBQUU3RyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQzs7QUFFM0UsTUFBTSxVQUFVLHlCQUF5QixDQUFDLFNBQTZCLEVBQUU7SUFDckUsT0FBTztRQUNILEVBQUMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUM7S0FDckQsQ0FBQztBQUNOLENBQUM7QUFFRCxNQWtCYSxpQkFBaUI7SUFFbkIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxpQkFBc0M7UUFDeEQsT0FBTztZQUNILFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNQLHlCQUF5QixDQUFDLGlCQUFpQixDQUFDO2FBQy9DO1NBQ0osQ0FBQztJQUNOLENBQUM7MEhBVFEsaUJBQWlCOzJIQUFqQixpQkFBaUIsaUJBYnRCLDJCQUEyQjtZQUMzQixvQkFBb0I7WUFDcEIseUJBQXlCLGFBTHpCLFlBQVksYUFRWiwyQkFBMkI7WUFDM0Isb0JBQW9CO1lBQ3BCLHlCQUF5QjsySEFNcEIsaUJBQWlCLGFBSmY7WUFDUCx5QkFBeUIsRUFBRTtTQUM5QixZQWRHLFlBQVk7O1NBZ0JQLGlCQUFpQjsyRkFBakIsaUJBQWlCO2tCQWxCN0IsUUFBUTttQkFBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsWUFBWTtxQkFDZjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1YsMkJBQTJCO3dCQUMzQixvQkFBb0I7d0JBQ3BCLHlCQUF5QjtxQkFDNUI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLDJCQUEyQjt3QkFDM0Isb0JBQW9CO3dCQUNwQix5QkFBeUI7cUJBQzVCO29CQUNELFNBQVMsRUFBRTt3QkFDUCx5QkFBeUIsRUFBRTtxQkFDOUI7aUJBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlLCBQcm92aWRlcn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcclxuLy9cclxuaW1wb3J0IHtOZ3hQb3BwZXJqc0RpcmVjdGl2ZX0gZnJvbSBcIi4vZGlyZWN0aXZlcy9uZ3gtcG9wcGVyanMvbmd4LXBvcHBlcmpzLmRpcmVjdGl2ZVwiO1xyXG5pbXBvcnQge05neFBvcHBlcmpzTG9vc2VEaXJlY3RpdmV9IGZyb20gXCIuL2RpcmVjdGl2ZXMvbmd4LXBvcHBlcmpzL25neC1wb3BwZXJqcy1sb29zZS5kaXJlY3RpdmVcIjtcclxuaW1wb3J0IHtOZ3hQb3BwZXJqc0NvbnRlbnRDb21wb25lbnR9IGZyb20gXCIuL2NvbXBvbmVudHMvbmd4LXBvcHBlcmpzLWNvbnRlbnQvbmd4LXBvcHBlcmpzLWNvbnRlbnQuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7Tmd4UG9wcGVyanNPcHRpb25zfSBmcm9tIFwiLi9tb2RlbHMvbmd4LXBvcHBlcmpzLW9wdGlvbnMubW9kZWxcIjtcclxuaW1wb3J0IHtOR1hfUE9QUEVSSlNfREVGQVVMVFN9IGZyb20gXCIuL21vZGVscy9uZ3gtcG9wcGVyanMtZGVmYXVsdHMubW9kZWxcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlTmd4UG9wcGVyanNPcHRpb25zKGNvbmZpZzogTmd4UG9wcGVyanNPcHRpb25zID0ge30pOiBQcm92aWRlcltdIHtcclxuICAgIHJldHVybiBbXHJcbiAgICAgICAge3Byb3ZpZGU6IE5HWF9QT1BQRVJKU19ERUZBVUxUUywgdXNlVmFsdWU6IGNvbmZpZ30sXHJcbiAgICBdO1xyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZVxyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIE5neFBvcHBlcmpzQ29udGVudENvbXBvbmVudCxcclxuICAgICAgICBOZ3hQb3BwZXJqc0RpcmVjdGl2ZSxcclxuICAgICAgICBOZ3hQb3BwZXJqc0xvb3NlRGlyZWN0aXZlXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIE5neFBvcHBlcmpzQ29udGVudENvbXBvbmVudCxcclxuICAgICAgICBOZ3hQb3BwZXJqc0RpcmVjdGl2ZSxcclxuICAgICAgICBOZ3hQb3BwZXJqc0xvb3NlRGlyZWN0aXZlXHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgcHJvdmlkZU5neFBvcHBlcmpzT3B0aW9ucygpXHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hQb3BwZXJqc01vZHVsZSB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBmb3JSb290KHBvcHBlckJhc2VPcHRpb25zPzogTmd4UG9wcGVyanNPcHRpb25zKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hQb3BwZXJqc01vZHVsZT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5nTW9kdWxlOiBOZ3hQb3BwZXJqc01vZHVsZSxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgICAgICAgICBwcm92aWRlTmd4UG9wcGVyanNPcHRpb25zKHBvcHBlckJhc2VPcHRpb25zKVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=